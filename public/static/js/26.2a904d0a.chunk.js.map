{"version":3,"sources":["components/Label.js","components/CopyToClipboard.js","pages/CreateStake.js"],"names":["styled","theme","styleProps","isLight","palette","mode","color","variant","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","marginRight","CopyClipboard","value","enqueueSnackbar","useSnackbar","onCopy","title","sx","Typography","subtitle2","overflow","WebkitLineClamp","WebkitBoxOrient","CreateStake","navigate","useNavigate","useActiveWeb3React","library","account","signer","getSigner","useSelector","state","network","chainId","useState","token","setToken","tokenError","setTokenError","rewardRate","setRewardRate","amount","setAmount","amountError","setAmountError","Date","now","date","setDate","tokenContract","useTokenContract","isParsing","setIsParsing","processing","setProcessing","useLockContract","name","symbol","decimals","totalSupply","balanceOf","tokenInfo","setTokenInfo","useEffect","unmounted","console","log","handleCreate","token0","lt","parseUnits","String","bytecode","STAKE_CONTRACT_BYTECODE","object","factory","ethers","ContractFactory","STAKE_CONTRACT_ABI","deploy","contract","address","poolAddress","deployTransaction","wait","transfer","tx","axios","post","owner","tokenAddress","tokenName","tokenSymbol","response","data","message","maxWidth","className","width","p","transition","boxShadow","customShadows","z24","mt","fullWidth","label","type","error","Boolean","helperText","onChange","e","target","size","marginTop","direction","my","borderColor","commify","formatUnits","renderInput","props","newValue","class","onClick"],"mappings":"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","file":"static/js/26.2a904d0a.chunk.js","sourcesContent":["// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('span')(({ theme, styleProps }) => {\r\n  const isLight = theme.palette.mode === 'light';\r\n  const { color, variant } = styleProps;\r\n\r\n  const styleFilled = (color) => ({\r\n    color: theme.palette[color].contrastText,\r\n    backgroundColor: theme.palette[color].main\r\n  });\r\n\r\n  const styleOutlined = (color) => ({\r\n    color: theme.palette[color].main,\r\n    backgroundColor: 'transparent',\r\n    border: `1px solid ${theme.palette[color].main}`\r\n  });\r\n\r\n  const styleGhost = (color) => ({\r\n    color: theme.palette[color][isLight ? 'dark' : 'light'],\r\n    backgroundColor: alpha(theme.palette[color].main, 0.16)\r\n  });\r\n\r\n  return {\r\n    height: 24,\r\n    minWidth: 24,\r\n    lineHeight: 0,\r\n    borderRadius: 8,\r\n    cursor: 'default',\r\n    alignItems: 'center',\r\n    whiteSpace: 'nowrap',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(0.5, 1.5),\r\n    color: theme.palette.grey[800],\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontFamily: theme.typography.fontFamily,\r\n    backgroundColor: theme.palette.grey[300],\r\n    fontWeight: theme.typography.fontWeightBold,\r\n\r\n    ...(color !== 'default'\r\n      ? {\r\n          ...(variant === 'filled' && { ...styleFilled(color) }),\r\n          ...(variant === 'outlined' && { ...styleOutlined(color) }),\r\n          ...(variant === 'ghost' && { ...styleGhost(color) })\r\n        }\r\n      : {\r\n          ...(variant === 'outlined' && {\r\n            backgroundColor: 'transparent',\r\n            color: theme.palette.text.primary,\r\n            border: `1px solid ${theme.palette.grey[500_32]}`\r\n          }),\r\n          ...(variant === 'ghost' && {\r\n            color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\r\n            backgroundColor: theme.palette.grey[500_16]\r\n          })\r\n        })\r\n  };\r\n});\r\n\r\nconst DotStyle = styled('span')(({ theme, styleProps }) => {\r\n  // const isLight = theme.palette.mode === 'light';\r\n  const { color } = styleProps;\r\n\r\n  const styleFilled = (color) => ({\r\n    color: theme.palette[color].contrastText,\r\n    backgroundColor: theme.palette[color].main\r\n  });\r\n\r\n  return {\r\n    height: 10,\r\n    minWidth: 10,\r\n    marginRight: 6,\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    ...styleFilled(color)\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Label({ color = 'default', variant = 'ghost', children, ...other }) {\r\n  return (\r\n    <RootStyle styleProps={{ color, variant }} {...other}>\r\n      <DotStyle styleProps={{ color }} />\r\n      {children}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n// material\r\nimport { Tooltip, IconButton } from '@mui/material';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCopyClipboard.propTypes = {\r\n  value: PropTypes.string\r\n};\r\n\r\nexport default function CopyClipboard({ value, ...other }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const onCopy = () => {\r\n    enqueueSnackbar('Copied', { variant: 'success' });\r\n  };\r\n\r\n  return (\r\n    <CopyToClipboard text={value} onCopy={onCopy}>\r\n      <Tooltip title=\"Copy\">\r\n        <IconButton>\r\n          <ContentCopyIcon sx={{ fontSize: 12, color: 'white' }} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </CopyToClipboard>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Stack,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  Container,\r\n  Alert,\r\n  AlertTitle,\r\n  linearProgressClasses,\r\n  Link\r\n} from '@mui/material';\r\nimport { DateTimePicker } from '@mui/lab';\r\nimport React, { useCallback, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTokenContract } from '../hooks/useContract';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router';\r\nimport Label from 'components/Label';\r\nimport Page from 'components/Page';\r\nimport { BigNumber } from 'ethers';\r\nimport { LOCK_ADDRESS } from '../config/constants';\r\nimport { formatUnits, parseUnits, commify } from '@ethersproject/units';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useLockContract } from 'hooks/useContract';\r\nimport Loader from 'react-loader-spinner';\r\nimport HashLoader from 'react-spinners/HashLoader';\r\nimport CopyClipboard from 'components/CopyToClipboard';\r\nimport axios from '../utils/axios';\r\nimport { ethers } from 'ethers';\r\nimport STAKE_CONTRACT_BYTECODE from '../config/bytecode/staking.json';\r\nimport STAKE_CONTRACT_ABI from '../config/abi/staking.json';\r\n\r\nconst TitleStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  height: 44,\r\n  color: 'inherit',\r\n  overflow: 'hidden',\r\n  WebkitLineClamp: 2,\r\n  display: '-webkit-box',\r\n  WebkitBoxOrient: 'vertical'\r\n}));\r\n\r\n// const SERVER_URL = \"https://mintwall.io/uploads\"; // was http://localhost:5000/uploads\r\n\r\nexport default function CreateStake() {\r\n  const navigate = useNavigate();\r\n  // const handleTokenAddress = async (e) => {\r\n  //   setIsParsing(true);\r\n  //   dispatch(setAddress(e.target.value));\r\n  // };\r\n  const { library, account } = useActiveWeb3React();\r\n  const signer = library?.getSigner();\r\n  const network = useSelector((state) => state.network.chainId);\r\n  //input\r\n  const [token, setToken] = useState('');\r\n  const [tokenError, setTokenError] = useState('');\r\n  const [rewardRate, setRewardRate] = useState(3);\r\n  const [amount, setAmount] = useState(1000);\r\n  const [amountError, setAmountError] = useState('');\r\n  const [date, setDate] = useState(new Date(Date.now()));\r\n\r\n  const tokenContract = useTokenContract(token);\r\n  const [isParsing, setIsParsing] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const lockContract = useLockContract();\r\n  const [tokenInfo, setTokenInfo] = useState({\r\n    name: '',\r\n    symbol: '',\r\n    decimals: 0,\r\n    totalSupply: 0,\r\n    balanceOf: 0\r\n  });\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    setIsParsing(true);\r\n    setTokenError('');\r\n    (async () => {\r\n      try {\r\n        if (token != '') {\r\n          const name = await tokenContract.name();\r\n          const symbol = await tokenContract.symbol();\r\n          const decimals = await tokenContract.decimals();\r\n          const totalSupply = await tokenContract.totalSupply();\r\n          const balanceOf = await tokenContract.balanceOf(account);\r\n          if (!unmounted) {\r\n            setTokenInfo({ name, symbol, totalSupply, decimals, balanceOf });\r\n          }\r\n        } else {\r\n          if (!unmounted) {\r\n            setTokenInfo({\r\n              name: '',\r\n              symbol: '',\r\n              decimals: 0,\r\n              totalSupply: 0,\r\n              balanceOf: 0\r\n            });\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        if (!unmounted) {\r\n          setTokenInfo({\r\n            name: '',\r\n            symbol: '',\r\n            decimals: 0,\r\n            totalSupply: 0,\r\n            balanceOf: 0\r\n          });\r\n          setTokenError('Invalid token address');\r\n        }\r\n      }\r\n      setIsParsing(false);\r\n    })();\r\n\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [tokenContract, account]);\r\n\r\n  const handleCreate = async () => {\r\n    let unmounted = false;\r\n    setProcessing(true);\r\n    (async () => {\r\n      if (token != '' && amount > 0 && !processing) {\r\n        let isLiquidity = false;\r\n        try {\r\n          const token0 = await tokenContract.token0();\r\n          if (token0) isLiquidity = true;\r\n        } catch (err) {}\r\n        //check wallet balance\r\n        try {\r\n          const balance = await tokenContract.balanceOf(account);\r\n          if (balance.lt(parseUnits(String(amount), tokenInfo.decimals))) {\r\n            if (!unmounted) {\r\n              setAmountError('More than balance!');\r\n              setProcessing(false);\r\n            }\r\n            return;\r\n          }\r\n        } catch (err) {\r\n          if (!unmounted) {\r\n            setTokenError('Invalid token address');\r\n            setProcessing(false);\r\n          }\r\n          return;\r\n        }\r\n        // check allowance\r\n        // try {\r\n        //   const allowance = await tokenContract.allowance(account, LOCK_ADDRESS[network]);\r\n        //   console.log(allowance);\r\n        //   if (allowance.lt(parseUnits(String(amount), tokenInfo.decimals))) {\r\n        //     const tx = await tokenContract.approve(\r\n        //       LOCK_ADDRESS[network],\r\n        //       parseUnits(String(amount), tokenInfo.decimals)\r\n        //     );\r\n        //     await tx.wait();\r\n        //   }\r\n        // } catch (err) {\r\n        //   if (!unmounted) {\r\n        //     setTokenError('Failed in Approving!');\r\n        //     setProcessing(false);\r\n        //   }\r\n        //   return;\r\n        // }\r\n\r\n        //check Date\r\n        // if (new Date(date).getTime() - Date.now() < 10 * 1000) {\r\n        //   enqueueSnackbar('Oops, Lock duration should be longer than 10 minutes!', {\r\n        //     variant: 'error'\r\n        //   });\r\n        //   if (!unmounted) {\r\n        //     setProcessing(false);\r\n        //   }\r\n        //   return;\r\n        // }\r\n\r\n        // add Lock\r\n        // try {\r\n        //   const tx = await lockContract.add(\r\n        //     token,\r\n        //     new Date(date).getTime() / 1000,\r\n        //     parseUnits(String(amount), tokenInfo.decimals),\r\n        //     account,\r\n        //     isLiquidity\r\n        //   );\r\n        //   await tx.wait();\r\n        //   if (!unmounted) {\r\n        //     setAmount(0);\r\n        //     setToken('');\r\n        //     enqueueSnackbar('Locked successufully!', {\r\n        //       variant: 'success'\r\n        //     });\r\n        //     setProcessing(false);\r\n        //   }\r\n        // } catch (err) {\r\n        //   if (!unmounted) {\r\n        //     setTokenError('Failed in Locking!');\r\n        //     setProcessing(false);\r\n        //   }\r\n        //   return;\r\n        // }\r\n\r\n        //Deploy staking contract\r\n        var poolAddress;\r\n        try {\r\n          const bytecode = STAKE_CONTRACT_BYTECODE.object;\r\n          console.log(bytecode);\r\n          const factory = new ethers.ContractFactory(STAKE_CONTRACT_ABI, bytecode, signer);\r\n          const contract = await factory.deploy(token, token, rewardRate);\r\n          console.log(contract.address);\r\n          poolAddress = contract.address;\r\n          await contract.deployTransaction.wait();\r\n\r\n          const tx = await tokenContract.transfer(poolAddress, parseUnits(String(amount), tokenInfo.decimals));\r\n          await tx.wait();\r\n\r\n          if (!unmounted) {\r\n            setAmount(0);\r\n            setToken('');\r\n            setProcessing(false);\r\n          }\r\n          navigate(`/stakepad`);\r\n        } catch (err) {\r\n          console.log(err);\r\n          if (!unmounted) {\r\n            setTokenError('Failed!');\r\n            setProcessing(false);\r\n          }\r\n          return;\r\n        }\r\n\r\n        //save db\r\n        try {\r\n          const response = await axios.post(`/api/bsc/stake`, {\r\n            address: poolAddress,\r\n            owner: account,\r\n            tokenAddress: token,\r\n            tokenName: tokenInfo.name,\r\n            tokenSymbol: tokenInfo.symbol,\r\n            tokenAddress: token,\r\n            rewardRate: rewardRate,\r\n            tvl: amount,\r\n            startAt: date\r\n          });\r\n          if (response.data) {\r\n            let message = response.data.message;\r\n            enqueueSnackbar('success', {\r\n              variant: 'success'\r\n            });\r\n          } else {\r\n            enqueueSnackbar('failed', {\r\n              variant: 'danger'\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          enqueueSnackbar('Oops, Something went wrong!', {\r\n            variant: 'error'\r\n          });\r\n        }\r\n      }\r\n    })();\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Create Lock\">\r\n      <Container maxWidth=\"lg\" className=\"pt-5\">\r\n        <Card\r\n          sx={{\r\n            width: 1,\r\n            p: 3,\r\n            transition: 'all .3s',\r\n            cursor: 'pointer',\r\n            '&:hover': {\r\n              boxShadow: (theme) => theme.customShadows.z24\r\n            }\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\">Create Your STAKING POOL</Typography>\r\n          <Divider />\r\n          <Stack sx={{ mt: 2 }} spacing={3}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Token Address\"\r\n              type=\"text\"\r\n              error={Boolean(tokenError)}\r\n              helperText={tokenError}\r\n              value={token}\r\n              onChange={(e) => setToken(e.target.value)}\r\n              sx={{\r\n                width: 1\r\n              }}\r\n            />\r\n            {isParsing == true ? (\r\n              // <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={30} width={30} />\r\n              <HashLoader color=\"#59f1f6\" size={30} />\r\n            ) : tokenInfo.name != '' ? (\r\n              <Stack sx={{ marginTop: '30px', padding: '0 20px' }}>\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Name</span>\r\n                  <span>{tokenInfo.name}</span>\r\n                </Stack>\r\n                <Divider sx={{ my: 1.5, borderColor: 'rgba(255, 255, 255, 0.3)' }} />\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Symbol</span>\r\n                  <span>{tokenInfo.symbol}</span>\r\n                </Stack>\r\n                <Divider sx={{ my: 1.5, borderColor: 'rgba(255, 255, 255, 0.3)' }} />\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Total Supply</span>\r\n                  <span>{commify(formatUnits(tokenInfo.totalSupply, tokenInfo.decimals))}</span>\r\n                </Stack>\r\n                <Divider sx={{ my: 1.5, borderColor: 'rgba(255, 255, 255, 0.3)' }} />\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Decimals</span>\r\n                  <span>{tokenInfo.decimals}</span>\r\n                </Stack>\r\n                <Divider sx={{ my: 1.5, borderColor: 'rgba(255, 255, 255, 0.3)' }} />\r\n                <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                  <span>Balance</span>\r\n                  <span>{commify(formatUnits(tokenInfo.balanceOf, tokenInfo.decimals))}</span>\r\n                </Stack>\r\n              </Stack>\r\n            ) : (\r\n              ''\r\n            )}\r\n            <TextField\r\n              fullWidth\r\n              label=\"Amount\"\r\n              type=\"number\"\r\n              error={Boolean(amountError)}\r\n              helperText={amountError}\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              sx={{\r\n                width: 1\r\n              }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Reward Rate\"\r\n              type=\"number\"\r\n              // error={Boolean(amountError)}\r\n              // helperText={amountError}\r\n              value={rewardRate}\r\n              onChange={(e) => setRewardRate(e.target.value)}\r\n              sx={{\r\n                width: 1\r\n              }}\r\n            />\r\n            <DateTimePicker\r\n              renderInput={(props) => <TextField sx={{ width: 1 }} {...props} />}\r\n              label=\"Lock Until:\"\r\n              value={date}\r\n              onChange={(newValue) => {\r\n                setDate(newValue);\r\n              }}\r\n            />\r\n          </Stack>\r\n          <Stack sx={{ mt: 2 }} alignItems=\"center\" spacing={1}>\r\n            {/* <Typography>You will pay: 0.1BNB</Typography> */}\r\n            <Button size=\"large\" variant=\"contained\" class=\"btn btn-info text-light mt-2 mx-4\" onClick={handleCreate}>\r\n              {processing ? <HashLoader color=\"#59f1f6\" size={30} /> : 'Create Pool'}\r\n            </Button>\r\n          </Stack>\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}